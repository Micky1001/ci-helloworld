name: Java CI/CD with Gradle

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build_and_test:
    name: Build and Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
      - name: Setting Permissions
        run: chmod a+x gradlew
      - name: Build with Gradle
        uses: gradle/gradle-build-action@67421db6bd0bf253fb4bd25b31ebb98943c375e1
        with:
          arguments: build
      - name: Test with Gradle
        uses: gradle/gradle-build-action@67421db6bd0bf253fb4bd25b31ebb98943c375e1
        with:
          arguments: test
      - name: Run Test Coverage
        run: ./gradlew jacocoTestReport
      - name: Compare Coverage with Previous Run
        run: |
          REPORT="build/reports/jacoco/test/jacocoTestReport.csv"
          if [ ! -f "$REPORT" ]; then
            echo "Jacoco CSV report not found!"
            exit 1
          fi
          total_instr_missed=0
          total_instr_covered=0
          total_branch_missed=0
          total_branch_covered=0
          tail -n +2 "$REPORT" | while IFS=',' read -r group package class instr_missed instr_covered branch_missed branch_covered rest; do
            total_instr_missed=$((total_instr_missed + instr_missed))
            total_instr_covered=$((total_instr_covered + instr_covered))
            total_branch_missed=$((total_branch_missed + branch_missed))
            total_branch_covered=$((total_branch_covered + branch_covered))
          done
          current_instr_percent=$(echo "scale=2; $total_instr_covered*100/($total_instr_missed + $total_instr_covered)" | bc)
          current_branch_percent=$(echo "scale=2; $total_branch_covered*100/($total_branch_missed + $total_branch_covered)" | bc)
          echo "Current instruction coverage: $current_instr_percent%"
          echo "Current branch coverage: $current_branch_percent%"
          if [ -f previous_coverage.txt ]; then
            IFS=',' read -r prev_instr_percent prev_branch_percent < previous_coverage.txt
            cmp_instr=$(echo "$current_instr_percent < $prev_instr_percent" | bc -l)
            cmp_branch=$(echo "$current_branch_percent < $prev_branch_percent" | bc -l)
            if [ "$cmp_instr" -eq 1 ] || [ "$cmp_branch" -eq 1 ]; then
              echo "Error: Coverage decreased compared to the previous run."
              exit 1
            fi
          else
            echo "No previous coverage file found. Skipping comparison."
          fi
          echo "$current_instr_percent,$current_branch_percent" > current_coverage.txt
        shell: bash
      - name: Save Current Coverage for Future Comparison
        run: |
          cp current_coverage.txt previous_coverage.txt
          git config user.email "action@github.com"
          git config user.name "GitHub Action"
          git pull --rebase origin master
          git add previous_coverage.txt
          git commit -m "Update coverage metrics [skip ci]" || echo "No changes to commit."
          git push
        shell: bash
      - name: Generate Jacoco Badge
        uses: cicirello/jacoco-badge-generator@v2.9.0
        with:
          jacoco-csv-file: build/reports/jacoco/test/jacocoTestReport.csv
  build_and_publish_docker_image:
    name: Publish to Docker Hub
    runs-on: ubuntu-latest
    needs: [build_and_test]
    steps:
      - uses: actions/checkout@v3
      - name: Login to Docker Hub
        run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
      - name: Build Container image
        run: docker build -t ${{ secrets.DOCKER_REPO }}:latest .
      - name: Publish Docker image
        run: docker push ${{ secrets.DOCKER_REPO }}